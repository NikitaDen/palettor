{"version":3,"sources":["assets/images/lock.svg","assets/images/unlock.svg","assets/images/close.svg","assets/images/list.svg","redux/palette-reducer.jsx","components/Header/Header.jsx","components/Palette/PaletteItem/PaletteItem.jsx","components/Palette/Interactions/Interactions.jsx","components/Palette/Palette.jsx","components/Info/Info.jsx","App.jsx","serviceWorker.js","redux/redux-store.jsx","index.jsx"],"names":["module","exports","initialState","palette","color","Math","floor","random","toString","locked","id","showInfo","showAppInfo","visible","type","paletteReducer","state","action","map","colorId","HeaderContainer","connect","palettePage","props","className","onClick","PaletteItem","useState","showButtons","setShowButtons","activateButtons","deactivateButtons","copyColor","e","target","select","document","execCommand","item","key","style","backgroundColor","onMouseEnter","onMouseLeave","opacity","readOnly","value","lockColor","src","unlockImage","lockImage","alt","Interactions","newColors","refreshPalette","PaletteContainer","InfoContainer","listStyleImage","list","close","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34b5a323.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lock.69ed3da6.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlock.b09efb2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.22138547.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.0f4d1425.svg\";","const REFRESH_PALETTE = 'REFRESH_PALETTE';\r\nconst LOCK_COLOR = 'LOCK_COLOR';\r\nconst SHOW_INFO = 'SHOW_INFO';\r\n\r\nconst initialState = {\r\n    palette: [\r\n        {color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, locked: false, id: 1},\r\n        {color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, locked: false, id: 2},\r\n        {color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, locked: false, id: 3},\r\n        {color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, locked: false, id: 4},\r\n        {color: `#${Math.floor(Math.random() * 16777215).toString(16)}`, locked: false, id: 5},\r\n    ],\r\n    showInfo: false,\r\n};\r\n\r\nconst paletteReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REFRESH_PALETTE:\r\n            return {\r\n                ...state,\r\n                palette: state.palette.map(color => {\r\n                    if (color.locked === false) {\r\n                        return {\r\n                            ...color,\r\n                            color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\r\n                        };\r\n                    }\r\n                    return color;\r\n                })\r\n            };\r\n        case LOCK_COLOR:\r\n            return {\r\n                ...state,\r\n                palette: state.palette.map(color => {\r\n                    if (action.colorId === color.id) {\r\n                        return {\r\n                            ...color,\r\n                            locked: !action.locked,\r\n                        }\r\n                    }\r\n                    return color;\r\n                })\r\n            };\r\n        case SHOW_INFO:\r\n            return {\r\n                ...state,\r\n                showInfo: !action.visible,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport const refreshPalette = (palette, locked) => ({type: REFRESH_PALETTE, palette, locked});\r\nexport const lockColor = (locked, colorId) => ({type: LOCK_COLOR, locked, colorId});\r\nexport const showAppInfo = (visible) => ({type: SHOW_INFO, visible});\r\n\r\nexport default paletteReducer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {showAppInfo} from \"../../redux/palette-reducer\";\r\n\r\nconst Header = (props) => {\r\n    const showAppInfo = (visible) => {\r\n        props.showAppInfo(visible);\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Palettor.</h1>\r\n            <button onClick={() => showAppInfo(props.showInfo)} className=\"button button--info\">How to use?</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        showInfo: state.palettePage.showInfo,\r\n    }\r\n};\r\n\r\nconst HeaderContainer = connect(stateToProps, {showAppInfo})(Header);\r\n\r\nexport default HeaderContainer;","import React, {useState} from \"react\";\r\nimport lockImage from \"./../../../assets/images/lock.svg\";\r\nimport unlockImage from \"./../../../assets/images/unlock.svg\";\r\n\r\nconst PaletteItem = (props) => {\r\n    let [showButtons, setShowButtons] = useState(false);\r\n\r\n    const activateButtons = () => {\r\n        setShowButtons(true);\r\n    };\r\n\r\n    const deactivateButtons = () => {\r\n        setShowButtons(false);\r\n    };\r\n\r\n    const toggleLockColor = (locked, id) => {\r\n        props.lockColor(locked, id);\r\n    };\r\n\r\n    const copyColor = (e) => {\r\n        let copyText = e.target;\r\n        copyText.select();\r\n        document.execCommand(\"copy\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"palette__container\">\r\n            {props.palette.map(item => {\r\n                return (\r\n                    <div key={item.id}\r\n                         className=\"palette__container__item\"\r\n                         style={{backgroundColor: item.color}}>\r\n                        <div onMouseEnter={activateButtons}\r\n                             onMouseLeave={deactivateButtons}\r\n                             className=\"palette__container__buttons\"\r\n                             style={showButtons ? {opacity: \"1\"} : {opacity: \"0\"}}>\r\n                            <input onClick={copyColor}\r\n                                   readOnly={true} type=\"text\" className='myColor'\r\n                                   value={item.color}/>\r\n                            <img onClick={() => toggleLockColor(item.locked, item.id)}\r\n                                 className=\"button button--lock\"\r\n                                 src={item.locked ? unlockImage : lockImage} alt={item.locked ? 'Lock color' : 'Unlock color'}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PaletteItem;","import React from \"react\";\r\n\r\nconst Interactions = (props) => {\r\n    const refreshPalette = (newColors) => {\r\n        props.refreshPalette(newColors);\r\n    };\r\n\r\n    const copyColor = (e) => {\r\n        let copyText = e.target;\r\n        copyText.select();\r\n        document.execCommand(\"copy\");\r\n    };\r\n\r\n    return (\r\n        <div className='interactions'>\r\n            <button className='button button--refresh' onClick={() => refreshPalette(props.palette)}>Generate</button>\r\n            <input type=\"text\" className=\"summary-values\" onClick={copyColor} value={props.palette.map(color => ' ' + color.color)} readOnly={true}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Interactions;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {lockColor, refreshPalette} from \"../../redux/palette-reducer\";\r\nimport PaletteItem from \"./PaletteItem/PaletteItem\";\r\nimport Interactions from \"./Interactions/Interactions\";\r\n\r\nconst Palette = (props) => {\r\n    return (\r\n        <div>\r\n            <PaletteItem {...props}/>\r\n            <Interactions {...props} />\r\n        </div>\r\n    )\r\n};\r\n\r\nlet stateToProps = (state) => ({\r\n    palette: state.palettePage.palette,\r\n    locked: state.palettePage.locked,\r\n});\r\n\r\nconst PaletteContainer = connect(stateToProps, {refreshPalette, lockColor})(Palette);\r\n\r\nexport default PaletteContainer;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {showAppInfo} from \"../../redux/palette-reducer\";\r\nimport close from \"../../assets/images/close.svg\";\r\nimport list from \"../../assets/images/list.svg\";\r\n\r\nconst Info = (props) => {\r\n    if (props.showInfo) {\r\n        return (\r\n            <ul style={{listStyleImage: `url(${list})`}} className=\"info\">\r\n                <button className=\"button\" onClick={() => props.showAppInfo(props.showInfo)}>\r\n                    <img className=\"button--close\" src={close} alt=\"Close\"/>\r\n                </button>\r\n                <li>Tap Generate button to refresh your palette;</li>\r\n                <li>Hover color to see more options;</li>\r\n                <li>By clicking Lock you can lock/unlock favorite colors and continue generate another colors;</li>\r\n                <li>You can copy any color-code to clipboard by clicking it;</li>\r\n                <h3>Let's find palette for you!;</h3>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return <div/>\r\n};\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        showInfo: state.palettePage.showInfo,\r\n    }\r\n};\r\n\r\nconst InfoContainer = connect(stateToProps, {showAppInfo})(Info);\r\nexport default InfoContainer;","import React from 'react';\nimport './assets/styles/styles.scss'\nimport Header from \"./components/Header/Header\";\nimport PaletteContainer from \"./components/Palette/Palette\";\nimport Info from \"./components/Info/Info\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Info/>\n      <PaletteContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport paletteReducer from \"./palette-reducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    palettePage: paletteReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}